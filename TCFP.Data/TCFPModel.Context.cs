//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TCFP.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Common;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TCFPEntities : DbContext
    {
        public TCFPEntities()
        : base("name=TCFPEntities")
    	{
    	}
    
    	public TCFPEntities(DbConnection existingConnection, bool contextOwnsConnection)
    		: base(existingConnection, contextOwnsConnection)
    	{
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ClientProfile> ClientProfiles { get; set; }
        public virtual DbSet<SystemParameter> SystemParameters { get; set; }
        public virtual DbSet<ClientToken> ClientTokens { get; set; }
    
        public virtual int sp_RegisterNewClient(string email, string name, string tokenID)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var tokenIDParameter = tokenID != null ?
                new ObjectParameter("tokenID", tokenID) :
                new ObjectParameter("tokenID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegisterNewClient", emailParameter, nameParameter, tokenIDParameter);
        }
    }
}
